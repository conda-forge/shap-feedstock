{% set name = "shap" %}
{% set version = "0.44.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 8f5f0401df83c8b2b566f41872f1bd8bc05bba43aab9e82bfb2047e9b2a0471c

build:
  number: 2
  skip: true  # [win and cuda_compiler_version != "None"]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
  script:
    - export NVCC_PREPEND_FLAGS="-ccbin ${CXX}"
    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - make  # [unix]
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
  host:
    - python
    - pip
    - setuptools >=61.0
    - setuptools-scm >=8.0
    - packaging >=20.9
    - numpy
  run:
    - python
    - packaging >20.9
    - numpy
    - scipy
    - scikit-learn
    - pandas
    - tqdm >=4.27.0
    - slicer ==0.0.7
    - numba
    - cloudpickle
    - __cuda  # [cuda_compiler_version != "None"]

test:
  requires:
    - pip
    - pytest
    - pytest-mpl
    - matplotlib-base
    - ipython
  source_files:
    - tests
  commands:
    - pip check
    # Skip tests for CUDA as CI doesn't have a GPU.
    - pytest -sv tests  # [cuda_compiler_version == "None"]
  imports:
    - shap
    - shap._cext
    - shap._cext_gpu  # [cuda_compiler_version != "None"]

about:
  home: https://github.com/slundberg/shap
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: A unified approach to explain the output of any machine learning model.
  description: |
    SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.
  doc_url: https://shap.readthedocs.io/en/latest/
  dev_url: https://github.com/slundberg/shap

extra:
  recipe-maintainers:
    - connortann
    - mrandrewandrade
    - primozgodec
    - slundberg
    - xhochy
